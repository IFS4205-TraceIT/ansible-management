name: Deploy
on:
  workflow_dispatch:

jobs:
  
  deploy:

    runs-on: cd-test
    container: 
      image: ubuntu:20.04
      options: --dns 192.168.1.101

    steps:
      - name: Cleanup build folder
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      
      - name: Install ansible and dependencies
        run: |
          apt-get update
          apt-get install -y software-properties-common
          apt-add-repository -y ppa:ansible/ansible
          apt-get update
          apt-get install -y sshpass ansible ansible-lint

      - name: Check installation
        run: |
          ansible --version

      - name: Clone repo
        uses: actions/checkout@v3

      - name: Generate database secrets for Database 1
        env:
          DATABASE_NAME: database1
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/write_database_keys.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          options: |
            --inventory hosts_dev.yml

      - name: Get Database 1 secrets from Vault
        uses: hashicorp/vault-action@v2.4.0
        id: database1-tde
        with:
          url: https://traceit-07-i:8200
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: true
          secrets: |
              kv/database1 tde_key | TDE_KEY ;
              kv/database1 root_password | POSTGRES_ROOT_PASSWORD;
          exportEnv: false

      - name: Download PostgreSQL TDE release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: IFS4205-TraceIT/PostgreSQL-TDE
          version: tags/vlatest
          file: postgresql_tde.tar.gz 
          token: ${{ secrets.PAT }}
          target: playbooks/files/postgresql_tde.tar.gz

      - name: Deploy Database 1
        uses: dawidd6/action-ansible-playbook@v2
        env:
          DB_HOSTS: traceit-01-i
          TDE_KEY:                "${{ steps.database1-tde.outputs.TDE_KEY }}"
          POSTGRES_ROOT_PASSWORD: "${{ steps.database1-tde.outputs.POSTGRES_ROOT_PASSWORD }}"
        with:
          playbook: playbooks/deploy_postgres.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          options: |
            --inventory hosts_dev.yml
