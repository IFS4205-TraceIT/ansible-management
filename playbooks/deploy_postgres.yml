- name: Deploy PostgreSQL TDE to database hosts
  hosts: "{{ lookup('ansible.builtin.env', 'DB_HOSTS') }}"
  gather_facts: no
  become: yes # Sudo as root

  tasks:

    - name: Create postgres user
      ansible.builtin.user:
        name: postgres
        shell: /bin/false # Don't allow login

    - name: Download PostgreSQL TDE artifact
      ansible.builtin.get_url:
        url: "{{ lookup('ansible.builtin.env', 'ARTIFACT_URL') }}"
        dest: /home/postgres/postgresql_tde.tar.gz
        owner: postgres
        group: postgres
        checksum: "sha256:{{ lookup('ansible.builtin.env', 'ARTIFACT_SHA256') }}"
        mode: 0400
        headers:
          Authorization: "token {{ lookup('ansible.builtin.env', 'GITHUB_TOKEN') }}"
          Accept: "application/octet-stream"

    - name: Extract PostgreSQL TDE files to home directory
      ansible.builtin.unarchive:
        remote_src: yes
        src: /home/postgres/postgresql_tde.tar.gz
        dest: /home/postgres/
        owner: postgres
        group: postgres

    - name: Create POC key manager file in home directory
      ansible.builtin.copy:
        dest: /home/postgres/key_manager.sh
        owner: postgres
        group: postgres
        mode: 0500
        content: |
          #!/bin/bash
          echo "${ENCRYPTION_KEY}"

    - name: Create database folder
      ansible.builtin.file:
        path: /opt/postgresql_db/
        state: directory
        owner: postgres
        group: postgres

    - name: Initialize database cluster
      become: yes
      become_user: postgres
      args:
        chdir: /home/postgres/postgresql_tde/bin
      ansible.builtin.command:
        argv:
          - ./initdb
          - -D
          - /opt/postgresql_db/
          - -K
          - /home/postgres/key_manager.sh
        creates: /opt/postgresql_db/PG_VERSION # Used to track if cluster is already created
      environment:
        LD_LIBRARY_PATH: /home/postgres/postgresql_tde/lib
        ENCRYPTION_KEY: "{{ lookup('ansible.builtin.env', 'TDE_KEY') }}"

    - name: Create database log
      ansible.builtin.file:
        path: /var/log/postgresql_tde.log
        state: touch
        owner: postgres
        group: postgres
        mode: 0600

    - name: Apply pg_hba.conf
      become: yes
      become_user: postgres
      ansible.builtin.copy:
        dest: /opt/postgresql_db/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0600
        content: |
          # TYPE  DATABASE        USER            ADDRESS                 METHOD

          # "local" is for Unix domain socket connections only
          local   all             postgres                                trust
          # IPv4 local connections:
          host    all             all             0.0.0.0/0               md5

    - name: Apply listen_addresses
      become: yes
      become_user: postgres
      ansible.builtin.lineinfile:
        path: /opt/postgresql_db/postgresql.conf
        search_string: "#listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"

    - name: Start database service
      become: yes
      become_user: postgres
      args:
        chdir: /home/postgres/postgresql_tde/bin
      ansible.builtin.command:
        argv:
          - ./pg_ctl
          - -D
          - /opt/postgresql_db/
          - -l
          - /var/log/postgresql_tde.log
          - start
      environment:
        LD_LIBRARY_PATH: /home/postgres/postgresql_tde/lib
        ENCRYPTION_KEY: "{{ lookup('ansible.builtin.env', 'TDE_KEY') }}"

    - name: Set password for root user
      become: yes
      become_user: postgres
      args:
        chdir: /home/postgres/postgresql_tde/bin
      ansible.builtin.command:
        argv:
          - ./psql
          - -c  
          - ALTER USER postgres PASSWORD '{{ lookup("ansible.builtin.env", "POSTGRES_ROOT_PASSWORD") }}';
      environment:
        LD_LIBRARY_PATH: /home/postgres/postgresql_tde/lib  
