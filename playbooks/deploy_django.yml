- name: Generate certificate for Gunicorn service
  hosts: vault
  gather_facts: no
  become: yes
  become_user: vault

  environment:
    VAULT_TOKEN: "{{ lookup('ansible.builtin.env', 'VAULT_TOKEN') }}"
    VAULT_ADDR: "https://traceit-07-i.comp.nus.edu.sg:8200"
    VAULT_CACERT: "/home/vault/ca.crt"

  tasks:

    - name: Request CA certificate
      ansible.builtin.command:
        argv:
          - vault
          - read
          - -field=certificate
          - pki_int/cert/ca
      register: ca_certificate_output

    - name: Request server certificate
      ansible.builtin.command:
        argv:
          - vault
          - write
          - -format=json
          - pki_int/issue/{{ lookup('ansible.builtin.env', 'APP_HOSTS') }}
          - common_name={{ lookup('ansible.builtin.env', 'APP_HOSTS') }}
          - ttl=767h
      register: server_certificate_output

    - name: "Add certificate output to dummy host"
      ansible.builtin.add_host:
        name: "CERTIFICATE_HOLDER"
        certificate: "{{ server_certificate_output.stdout | from_json | json_query('data.certificate') }}"
        private_key: "{{ server_certificate_output.stdout | from_json | json_query('data.private_key') }}"
        ca_certificate: "{{ ca_certificate_output.stdout }}"

- name: Deploy Django + Gunicorn to app servers
  hosts: "{{ lookup('ansible.builtin.env', 'APP_HOSTS') }}"
  gather_facts: no
  become: yes # Sudo as root

  tasks:

    - name: Create django user
      ansible.builtin.user:
        name: django
        shell: /bin/false # Don't allow login

    - name: Add Python Repository
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa

    - name: Update to Python 3.10
      ansible.builtin.apt:
        name: python3.10

    - name: Install poetry
      become: yes
      become_user: django
      ansible.builtin.shell:
        cmd: curl -sSL https://install.python-poetry.org | python3.10 -
      args:
        creates: /home/django/.local/bin/poetry

    - name: Checkout repository
      become: yes
      become_user: django
      ansible.builtin.git:
        repo: "https://{{ lookup('ansible.builtin.env', 'PAT') }}@github.com/{{ lookup('ansible.builtin.env', 'REPOSITORY') }}"
        dest: /home/django/repo

    - name: Install dependencies
      become: yes
      become_user: django
      args:
        chdir: /home/django/repo
      ansible.builtin.shell: |
        export PATH=/home/django/.local/bin:$PATH
        poetry config --local virtualenvs.options.no-setuptools true
        poetry config --local virtualenvs.options.no-pip true
        poetry install --no-interaction
    
    - name: Add server certificate
      become: yes
      become_user: django
      ansible.builtin.copy:
        dest: /home/django/repo/server.crt
        owner: django
        group: django
        mode: 0600
        content: "{{ hostvars['CERTIFICATE_HOLDER']['certificate'] }}"

    - name: Add server private key
      become: yes
      become_user: django
      ansible.builtin.copy:
        dest: /home/django/repo/server.key
        owner: django
        group: django
        mode: 0600
        content: "{{ hostvars['CERTIFICATE_HOLDER']['private_key'] }}"

    - name: Perform database migrations
      become: yes
      become_user: django
      args:
        chdir: /home/django/repo
      ansible.builtin.shell: |
        export PATH=/home/django/.local/bin:$PATH
        poetry run python manage.py makemigrations
        poetry run python manage.py migrate
      environment:
        # Django
        DJANGO_SECRET_KEY: "{{ lookup('ansible.builtin.env', 'DJANGO_SECRET_KEY') }}"
        DJANGO_DEBUG: True
        # Vault
        VAULT_ADDR: "https://traceit-07-i.comp.nus.edu.sg:8200"
        VAULT_TOKEN: "{{ lookup('ansible.builtin.env', 'VAULT_TOKEN') }}"
        # PostgreSQL
        POSTGRES_HOST: "{{ lookup('ansible.builtin.env', 'POSTGRES_HOST') }}"
        POSTGRES_PORT: 5432
        POSTGRES_DB: "{{ lookup('ansible.builtin.env', 'POSTGRES_DB') }}"
        POSTGRES_USER: "{{ lookup('ansible.builtin.env', 'POSTGRES_USER') }}"
        POSTGRES_PASSWORD: "{{ lookup('ansible.builtin.env', 'POSTGRES_PASSWORD') }}"
      register: migrations
    - debug: msg={{ migrations.stdout_lines }}

    - name: Run gunicorn in daemon mode
      become: yes
      become_user: django
      args:
        chdir: /home/django/repo
      ansible.builtin.shell: |
        export PATH=/home/django/.local/bin:$PATH
        poetry run gunicorn -w 5 --bind 0.0.0.0:8000 {{ lookup('ansible.builtin.env', 'APP_NAME') }}.wsgi:application --daemon --pid {{ lookup('ansible.builtin.env', 'APP_NAME') }}.pid --certfile=server.crt --keyfile=server.key
      environment:
        # Django
        DJANGO_SECRET_KEY: "{{ lookup('ansible.builtin.env', 'DJANGO_SECRET_KEY') }}"
        DJANGO_DEBUG: True
        # Vault
        VAULT_ADDR: "https://traceit-07-i.comp.nus.edu.sg:8200"
        VAULT_TOKEN: "{{ lookup('ansible.builtin.env', 'VAULT_TOKEN') }}"
        # PostgreSQL
        POSTGRES_HOST: "{{ lookup('ansible.builtin.env', 'POSTGRES_HOST') }}"
        POSTGRES_PORT: 5432
        POSTGRES_DB: "{{ lookup('ansible.builtin.env', 'POSTGRES_DB') }}"
        POSTGRES_USER: "{{ lookup('ansible.builtin.env', 'POSTGRES_USER') }}"
        POSTGRES_PASSWORD: "{{ lookup('ansible.builtin.env', 'POSTGRES_PASSWORD') }}"
